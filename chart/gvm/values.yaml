# Default values for gvm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

gvmdReplicaCount: 1

openvasReplicaCount: 1

gsadReplicaCount: 1

remoteScannerReplicaCount: 0

# Define the namespace for the gvm deployment
namespace:
  name: default

# To change all the gvm tags together you can use go templates.
# Example:
#
# global:
#   gvmImageTag: "10"
# image:
#   gvmd:
#     tag: "{{ .Values.global.gvmImageTag }}"
#   gsad:
#     tag: "{{ .Values.global.gvmImageTag }}"
#   openvas:
#     tag: "{{ .Values.global.gvmImageTag }}"
  
image:
  gvmd:
    registry: "registry.gitlab.developers.cam.ac.uk"
    repository: uis/infra/gvm-deployment/gvmd
    tag: "9"
    pullPolicy: Always
  gsad:
    registry: "registry.gitlab.developers.cam.ac.uk"
    repository: uis/infra/gvm-deployment/gsad
    tag: "9"
    pullPolicy: IfNotPresent
  openvas:
    registry: "registry.gitlab.developers.cam.ac.uk"
    repository: uis/infra/gvm-deployment/openvas
    tag: "7"
    pullPolicy: IfNotPresent
  redis:
    registry: "docker.io"
    repository: "redis"
    tag: "6.0.9"
    pullPolicy: IfNotPresent
  socat:
    registry: "docker.io"
    repository: "alpine/socat"
    tag: "1.0.3"
    pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

labels:
  applicationName: gvm
  partOf: gvm
  instanceSuffix: ""

gvmdService:
  type: ClusterIP
  port: 9390

# headless service
remoteScannerService:
  type: ClusterIP
  clusterIP: None
  port: 9391

openvasService:
  type: ClusterIP
  port: 9391

# gsa service
service:
  type: NodePort
  nodePort: 32535
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  gvmd:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: "100m"
      memory: 100Mi
  gvmdOpenvasConnector:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: "100m"
      memory: 100Mi
  openvas:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: "100m"
      memory: 100Mi
  openvasListener:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: "100m"
      memory: 100Mi
  openvasRedis:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: "100m"
      memory: 100Mi
  gsad:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: "100m"
      memory: 100Mi
  remoteScanner:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 1
      memory: 1Gi

nodeSelector: {}

tolerations: []

affinity: {}

# the value of dataSubPathPrefix will be used as the prefix for
# subPath in volumeMounts of gvmd/openvas deployments for the
# persistent volume specified by persistence parameters
dataSubPathPrefix: ""

# This is data persistence for nasl plugins / scap data / cert
# data. For database persistence see gvmd-db and openvas-redis.
persistence:
  # It is highly recommended not to disable the
  # persistence. Without enabling a persistent volume
  # sharing nvt-plugins between gvmd and openvas-scanner is not
  # possible
  enabled: true

  # existing PVC to be used as data-volume-gvm
  existingClaim: "data-volume"

  # PVC annotations
  # annotations:

  accessMode: ReadWriteOnce
  # storageClass:
  # volumeName:
  size: 1Mi

postgres:
  secretName: gvm-postgres-secret
